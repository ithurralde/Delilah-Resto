swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "Swagger Delilah Resto"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:3000"
basePath: "/"
tags:
- name: "usuarios"
  description: "Everything about your Users"
- name: "platos"
  description: "Access to Petstore orders"
- name: "pedidos"
  description: "Operations about user"
- name: "forma_parte"
  description: "La tabla que se genera entre platos y pedidos"
schemes:
- "https"
- "http"
paths:
  /crear_usuario:
    post:
      tags:
      - "usuarios"
      summary: "Añade un nuevo usuario a la aplicación"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Formato JSON para añadir un usuario"
        required: true
        schema:
          $ref: "#/definitions/Usuario"
      responses:
        "201":
          description: "Usuario registrado exitosamente"
  /update_password:  
    put:
      tags:
      - "usuarios"
      summary: "Actualiza la contraseña de un usuario"
      description: ""
      operationId: "updatePet"
      consumes:
      - "application/json"
      produces:
        - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Pet object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/UpdateUsuario"
      responses:
        "200":
          description: "Contraseña actualizada."
        "404":
          description: "No existe el usuario."
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /usuario:
    get:
      tags:
      - "usuarios"
      summary: "Obtiene un usuario"
      produces:
      - "application/json"
      parameters:
      - name: "body"
        in: "body"
        description: "Campos de usuario y contraseña para ingresar"
        required: true
        schema:
          $ref: "#/definitions/GetUsuario"
      responses:
        "200":
          description: ""
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GetUsuario"
        "404":
          description: "No existe el usuario"
      security:
      - petstore_auth:
        - "write:pets"
        - "read:pets"
  /crear_plato:
    post:
      tags:
      - "platos"
      summary: "Crea un nuevo plato"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Formato JSON para crear un plato"
        required: true
        schema:
          $ref: "#/definitions/Plato"
      responses:
        "201":
          description: "Plato creado"
  /crear_pedido:
    post:
      tags:
      - "pedidos"
      summary: "Crea un nuevo pedido"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Formato JSON para crear un plato"
        required: true
        schema:
          $ref: "#/definitions/Plato"
      responses:
        "201":
          description: "Plato creado"
  /pedido:
    post:
      tags:
      - "pedidos"
      summary: "Obtiene un pedido"
      description: ""
      operationId: ""
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Formato JSON para crear un plato"
        required: true
        schema:
          $ref: "#/definitions/Plato"
      responses:
        "201":
          description: "Plato creado"      
  
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      petId:
        type: "integer"
        format: "int64"
      quantity:
        type: "integer"
        format: "int32"
      shipDate:
        type: "string"
        format: "date-time"
      status:
        type: "string"
        description: "Order Status"
        enum:
        - "placed"
        - "approved"
        - "delivered"
      complete:
        type: "boolean"
        default: false
    xml:
      name: "Order"
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Category"
  User:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      username:
        type: "string"
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      userStatus:
        type: "integer"
        format: "int32"
        description: "User Status"
    xml:
      name: "User"
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
    xml:
      name: "Tag"
  GetUsuario:
    type: "object"
    required:
    - "name"
    - "password"
    properties:
      user:
        type: "string"
        example: "user1"
      password:
        type: "string"
        example: "contraseña123"
  Usuario:
    type: "object"
    required:
    - "user"
    - "password"
    - "name"
    - "email"
    - "direccion"
    - "telefono"
    - "admin"
    properties:
      user:
        type: "string"
        example: "admin"
      password:
        type: "string"
        example: "admin123"
      name:
        type: "string"
        example: "admin04"
      email:
        type: "string"
        example: "admin@gmail.com"
      direccion:
        type: "string"
        example: "14 de julio 1554"
      telefono:
        type: "string"
        example: "+54011485619"
      admin:
        type: "boolean"
        example: "true"
  UpdateUsuario:
    type: "object"
    required:
    - "user"
    - "password"
    properties:
      nombrePlato:
        type: "string"
        example: "user1"
      descripcion:
        type: "string"
        example: "new-password"
  Plato:
    type: "object"
    required:
    - "nombrePlato"
    - "descripcion"
    properties:
      nombrePlato:
        type: "string"
        example: "Ensalada cesar"
      descripcion:
        type: "string"
        example: "Lechuga, tomate, pan duro, jamon crudo, salsa cesar"
  ApiResponse:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      type:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"